"""add blockchain fields

Revision ID: 6347f6f6f92f
Revises: 2efc69cf9e15
Create Date: 2025-03-18 16:29:10.646652

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6347f6f6f92f'
down_revision = '2efc69cf9e15'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('tx_hash', sa.String(length=80), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('temp_commission_records')
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('blockchain_details', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('deployment_tx_hash', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('payment_details', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('payment_confirmed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('payment_confirmed_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('approved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('approved_by', sa.String(length=64), nullable=True))

    with op.batch_alter_table('commission_records', schema=None) as batch_op:
        batch_op.alter_column('asset_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('recipient_address',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.NUMERIC(precision=18, scale=8),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'assets', ['asset_id'], ['id'])
        batch_op.create_foreign_key(None, 'trades', ['transaction_id'], ['id'])

    with op.batch_alter_table('user_referrals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('referral_time', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('asset_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=False))
        batch_op.alter_column('user_address',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('referrer_address',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'assets', ['asset_id'], ['id'])
        batch_op.drop_column('first_connected_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_referrals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_connected_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('referrer_address',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('user_address',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('status')
        batch_op.drop_column('asset_id')
        batch_op.drop_column('referral_time')

    with op.batch_alter_table('commission_records', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=18, scale=8),
               existing_nullable=False)
        batch_op.alter_column('recipient_address',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('asset_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.drop_column('approved_by')
        batch_op.drop_column('approved_at')
        batch_op.drop_column('payment_confirmed_at')
        batch_op.drop_column('payment_confirmed')
        batch_op.drop_column('payment_details')
        batch_op.drop_column('deployment_tx_hash')
        batch_op.drop_column('blockchain_details')

    op.create_table('temp_commission_records',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('recipient_address', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=18, scale=8), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('commission_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('referral_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tx_hash', sa.VARCHAR(length=100), autoincrement=False, nullable=True)
    )
    op.drop_table('commissions')
    # ### end Alembic commands ###
