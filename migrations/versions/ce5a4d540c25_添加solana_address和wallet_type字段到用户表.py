"""添加solana_address和wallet_type字段到用户表

Revision ID: ce5a4d540c25
Revises: 7614b3f415af
Create Date: 2025-05-27 01:32:07.855075

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ce5a4d540c25'
down_revision = '7614b3f415af'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('platform_income')
    op.drop_table('dividend_details')
    with op.batch_alter_table('admin_operation_logs', schema=None) as batch_op:
        batch_op.alter_column('admin_address',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('target_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_admin_operation_logs_admin_address')
        batch_op.drop_index('ix_admin_operation_logs_created_at')
        batch_op.drop_index('ix_admin_operation_logs_operation_type')

    with op.batch_alter_table('admin_users', schema=None) as batch_op:
        batch_op.drop_index('ix_admin_users_role')
        batch_op.drop_index('ix_admin_users_wallet_address')

    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.alter_column('token_address',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.alter_column('owner_address',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('creator_address',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=128),
               existing_nullable=False)

    with op.batch_alter_table('commission_records', schema=None) as batch_op:
        batch_op.drop_index('ix_commission_records_created_at')
        batch_op.drop_index('ix_commission_records_recipient_address')
        batch_op.drop_index('ix_commission_records_status')
        batch_op.drop_index('ix_commission_records_transaction_id')
        batch_op.drop_column('referral_level')

    with op.batch_alter_table('commission_settings', schema=None) as batch_op:
        batch_op.alter_column('commission_rate',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('min_amount',
               existing_type=sa.NUMERIC(precision=18, scale=8),
               type_=sa.Float(),
               existing_nullable=True)
        batch_op.alter_column('max_amount',
               existing_type=sa.NUMERIC(precision=18, scale=8),
               type_=sa.Float(),
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('created_by',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=80),
               nullable=True)
        batch_op.drop_index('ix_commission_settings_asset_type_id')
        batch_op.drop_index('ix_commission_settings_is_active')

    with op.batch_alter_table('dashboard_stats', schema=None) as batch_op:
        batch_op.alter_column('stat_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('stat_value',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_dashboard_stats_date_type_period')
        batch_op.drop_index('ix_dashboard_stats_stat_date')

    with op.batch_alter_table('distribution_levels', schema=None) as batch_op:
        batch_op.alter_column('commission_rate',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_distribution_levels_is_active')
        batch_op.drop_index('ix_distribution_levels_level')
        batch_op.create_unique_constraint(None, ['level'])

    with op.batch_alter_table('dividend_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('distributor_address', sa.String(length=44), nullable=False))
        batch_op.add_column(sa.Column('transaction_hash', sa.String(length=88), nullable=True))
        batch_op.add_column(sa.Column('interval', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=20, scale=6),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('dividends', schema=None) as batch_op:
        batch_op.add_column(sa.Column('payment_token', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('dividend_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('error_message', sa.Text(), nullable=True))
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=20, scale=6),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('transaction_hash',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_column('creator_address')
        batch_op.drop_column('distribution_date')
        batch_op.drop_column('record_date')
        batch_op.drop_column('fee_amount')

    with op.batch_alter_table('system_configs', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_system_configs_config_key')

    with op.batch_alter_table('trades', schema=None) as batch_op:
        batch_op.add_column(sa.Column('token_amount', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('payment_details', sa.Text(), nullable=True))
        batch_op.alter_column('asset_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('user_referrals', schema=None) as batch_op:
        batch_op.alter_column('joined_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_index('ix_user_referrals_referral_code')
        batch_op.drop_index('ix_user_referrals_referrer_address')
        batch_op.drop_index('ix_user_referrals_user_address')
        batch_op.create_unique_constraint(None, ['user_address'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('solana_address', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('wallet_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('is_distributor', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_blocked', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('referrer_address', sa.String(length=64), nullable=True))
        batch_op.create_unique_constraint(None, ['solana_address'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('referrer_address')
        batch_op.drop_column('is_blocked')
        batch_op.drop_column('is_verified')
        batch_op.drop_column('is_distributor')
        batch_op.drop_column('wallet_type')
        batch_op.drop_column('solana_address')

    with op.batch_alter_table('user_referrals', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('ix_user_referrals_user_address', ['user_address'], unique=False)
        batch_op.create_index('ix_user_referrals_referrer_address', ['referrer_address'], unique=False)
        batch_op.create_index('ix_user_referrals_referral_code', ['referral_code'], unique=False)
        batch_op.alter_column('joined_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('trades', schema=None) as batch_op:
        batch_op.alter_column('asset_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('payment_details')
        batch_op.drop_column('token_amount')

    with op.batch_alter_table('system_configs', schema=None) as batch_op:
        batch_op.create_index('ix_system_configs_config_key', ['config_key'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('dividends', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fee_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('record_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('distribution_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('creator_address', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('transaction_hash',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.Numeric(precision=20, scale=6),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
        batch_op.drop_column('error_message')
        batch_op.drop_column('description')
        batch_op.drop_column('dividend_date')
        batch_op.drop_column('payment_token')

    with op.batch_alter_table('dividend_records', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.Numeric(precision=20, scale=6),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('interval')
        batch_op.drop_column('transaction_hash')
        batch_op.drop_column('distributor_address')

    with op.batch_alter_table('distribution_levels', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('ix_distribution_levels_level', ['level'], unique=False)
        batch_op.create_index('ix_distribution_levels_is_active', ['is_active'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('commission_rate',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=False)

    with op.batch_alter_table('dashboard_stats', schema=None) as batch_op:
        batch_op.create_index('ix_dashboard_stats_stat_date', ['stat_date'], unique=False)
        batch_op.create_index('ix_dashboard_stats_date_type_period', ['stat_date', 'stat_type', 'stat_period'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('stat_value',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('stat_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)

    with op.batch_alter_table('commission_settings', schema=None) as batch_op:
        batch_op.create_index('ix_commission_settings_is_active', ['is_active'], unique=False)
        batch_op.create_index('ix_commission_settings_asset_type_id', ['asset_type_id'], unique=False)
        batch_op.alter_column('created_by',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('max_amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=18, scale=8),
               existing_nullable=True)
        batch_op.alter_column('min_amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=18, scale=8),
               existing_nullable=True)
        batch_op.alter_column('commission_rate',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=False)

    with op.batch_alter_table('commission_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('referral_level', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_index('ix_commission_records_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_commission_records_status', ['status'], unique=False)
        batch_op.create_index('ix_commission_records_recipient_address', ['recipient_address'], unique=False)
        batch_op.create_index('ix_commission_records_created_at', ['created_at'], unique=False)

    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.alter_column('creator_address',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.alter_column('owner_address',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.alter_column('token_address',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)

    with op.batch_alter_table('admin_users', schema=None) as batch_op:
        batch_op.create_index('ix_admin_users_wallet_address', ['wallet_address'], unique=False)
        batch_op.create_index('ix_admin_users_role', ['role'], unique=False)

    with op.batch_alter_table('admin_operation_logs', schema=None) as batch_op:
        batch_op.create_index('ix_admin_operation_logs_operation_type', ['operation_type'], unique=False)
        batch_op.create_index('ix_admin_operation_logs_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_admin_operation_logs_admin_address', ['admin_address'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('target_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('admin_address',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('dividend_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dividend_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('holder_address', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False),
    sa.Column('transaction_hash', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['dividend_id'], ['dividends.id'], name='dividend_details_dividend_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dividend_details_pkey')
    )
    op.create_table('platform_income',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('income_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='收入类型: trade_fee, onchain_fee, dividend_fee, other'),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False, comment='收入金额'),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=False, comment='收入币种'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='收入记录创建时间'),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='收入描述'),
    sa.Column('transaction_hash', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='交易哈希'),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='关联资产ID'),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], name='platform_income_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='platform_income_pkey')
    )
    # ### end Alembic commands ###
