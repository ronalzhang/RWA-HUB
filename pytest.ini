[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --color=yes

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    security: Security tests
    slow: Slow running tests
    admin: Tests requiring admin privileges
    blockchain: Tests involving blockchain operations
    cache: Tests involving cache operations
    database: Tests involving database operations

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:flask_sqlalchemy

# Coverage settings
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */migrations/*
    */node_modules/*
    app/__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

[coverage:html]
directory = htmlcov